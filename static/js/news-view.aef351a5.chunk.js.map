{"version":3,"sources":["components/Avatar/Avatar.module.css","components/TrendingFeed/TrendingFeed.module.css","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/Avatar/Avatar.tsx","components/NewsStats/NewsStats.tsx","components/Video/Video.tsx","components/TrendingFeed/TrendingFeed.tsx","pages/NewsView/NewsView.tsx","../node_modules/shortid/lib/alphabet.js","static/default.jpg","api/api.tsx","service/app.tsx","../node_modules/shortid/index.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/shortid/node_modules/nanoid/format.browser.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","pages/NewsView/NewsView.module.css"],"names":["module","exports","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","Avatar","avatarThumb","nickname","width","src","defaultImage","alt","className","styles","avatar","Stats","commentCount","diggCount","Video","downloadAddr","controls","type","kind","srcLang","label","Loader","TrendingFeed","feed","video","list_noorder","author","signature","feed_info","link","to","uniqueId","stats","NewsView","useState","trendingFeed","setTrendingFeed","currentPage","setCurrentPage","fetching","setFetching","scrollHandler","event","target","documentElement","scrollHeight","scrollTop","window","innerHeight","useEffect","document","addEventListener","removeEventListener","getTrendingFeed","then","data","previousState","error","console","wrap","length","map","shortid","generate","alphabet","previousSeed","shuffled","randomFromSeed","require","ORIGINAL","reset","setCharacters","_alphabet_","Error","unique","split","filter","item","ind","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","push","splice","shuffle","get","characters","seed","lookup","index","API","axios","create","baseURL","headers","process","a","response","getUserInfo","getUserFeed","build","isValid","clusterWorkerId","seedValue","worker","workerId","newCharacters","undefined","_seed_","counter","previousSeconds","str","seconds","Date","now","random","format","number","done","loopCounter","pow","randomByte","crypto","msCrypto","getRandomValues","size","Uint8Array","bytes","i","mask","log","LN2","step","id","RegExp","replace","test"],"mappings":"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","file":"static/js/news-view.aef351a5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Avatar_avatar__1ch69\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list_noorder\":\"TrendingFeed_list_noorder__3z2cs\",\"link\":\"TrendingFeed_link__2pVoc\",\"feed_info\":\"TrendingFeed_feed_info__2Agzl\"};","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react';\r\nimport styles from './Avatar.module.css';\r\nimport defaultImage from '../../static/default.jpg';\r\nimport { IAvatar } from '../../types/feedTypes';\r\n\r\nconst Avatar = ({ avatarThumb, nickname }: IAvatar) => {\r\n  return (\r\n    <img\r\n      width=\"70px\"\r\n      src={avatarThumb || defaultImage}\r\n      alt={nickname}\r\n      className={styles.avatar}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Avatar;\r\n","/* eslint-disable react/require-default-props */\r\nimport React from 'react';\r\nimport { IStats } from '../../types/feedTypes';\r\n\r\nconst Stats = ({ commentCount = 0, diggCount = 0 }: IStats) => {\r\n  return (\r\n    <ul>\r\n      <li>\r\n        Comments: <b>{commentCount}</b>\r\n      </li>\r\n      <li>\r\n        Likes: <b>{diggCount}</b>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","import React from 'react';\r\nimport Loader from '../Loader/Loader';\r\nimport { VideoProperties } from '../../types/feedTypes';\r\n\r\nconst Video = ({ downloadAddr }: VideoProperties) => {\r\n  return downloadAddr ? (\r\n    <video width=\"300px\" controls data-testid=\"video\">\r\n      <source src={downloadAddr} type=\"video/mp4;\" />\r\n      <track kind=\"captions\" srcLang=\"en\" label=\"english_captions\" />\r\n    </video>\r\n  ) : (\r\n    <Loader />\r\n  );\r\n};\r\n\r\nexport default Video;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Avatar from '../Avatar/Avatar';\r\nimport Stats from '../NewsStats/NewsStats';\r\nimport Video from '../Video/Video';\r\nimport styles from './TrendingFeed.module.css';\r\nimport Loader from '../Loader/Loader';\r\n\r\ninterface ITrendingFeed {\r\n  feed: {\r\n    video: {\r\n      downloadAddr: string;\r\n    };\r\n    author: {\r\n      signature: string;\r\n      avatarThumb: string;\r\n      nickname: string;\r\n      uniqueId: string;\r\n    };\r\n    stats: {\r\n      commentCount: number;\r\n      diggCount: number;\r\n    };\r\n  };\r\n}\r\n\r\nconst TrendingFeed = ({ feed }: ITrendingFeed) => {\r\n  return feed.video.downloadAddr ? (\r\n    <div className={styles.list_noorder} key={feed.author.nickname}>\r\n      <Video downloadAddr={feed.video.downloadAddr} />\r\n      <p>{feed.author.signature}</p>\r\n      <div className={styles.feed_info}>\r\n        <Avatar\r\n          avatarThumb={feed.author.avatarThumb}\r\n          nickname={feed.author.nickname}\r\n        />\r\n        <p>\r\n          <Link className={styles.link} to={`/profile/${feed.author.uniqueId}`}>\r\n            <b>{feed.author.nickname}</b>\r\n          </Link>\r\n        </p>\r\n      </div>\r\n      <Stats\r\n        commentCount={feed.stats.commentCount}\r\n        diggCount={feed.stats.diggCount}\r\n      />\r\n    </div>\r\n  ) : (\r\n    <Loader />\r\n  );\r\n};\r\n\r\nexport default TrendingFeed;\r\n","import React, { useState, useEffect } from 'react';\r\nimport shortid from 'shortid';\r\nimport styles from './NewsView.module.css';\r\nimport Loader from '../../components/Loader/Loader';\r\nimport { getTrendingFeed } from '../../service/app';\r\nimport TrendingFeed from '../../components/TrendingFeed/TrendingFeed';\r\nimport { ITrendingFeed } from '../../types/feedTypes';\r\n\r\nexport default function NewsView() {\r\n  const [trendingFeed, setTrendingFeed] = useState<ITrendingFeed[]>([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [fetching, setFetching] = useState(true);\r\n\r\n  const scrollHandler = (event: any): void => {\r\n    if (\r\n      event.target.documentElement.scrollHeight -\r\n        (event.target.documentElement.scrollTop + window.innerHeight) <\r\n      100\r\n    ) {\r\n      setFetching(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('scroll', scrollHandler);\r\n\r\n    return function () {\r\n      document.removeEventListener('scroll', scrollHandler);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      getTrendingFeed(currentPage).then(data => {\r\n        setTrendingFeed([...trendingFeed, ...data]);\r\n        setCurrentPage(previousState => previousState + 1);\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setFetching(false);\r\n    }\r\n  }, [fetching]);\r\n\r\n  return (\r\n    <div className={styles.wrap} key={shortid.generate()}>\r\n      {trendingFeed.length > 0 ? (\r\n        trendingFeed.map(feed => (\r\n          <TrendingFeed key={shortid.generate()} feed={feed} />\r\n        ))\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","export default __webpack_public_path__ + \"static/media/default.0baf9395.jpg\";","import axios from 'axios';\r\n\r\nconst baseURL = 'https://tiktok33.p.rapidapi.com';\r\n\r\nconst API = axios.create({\r\n  baseURL,\r\n  headers: {\r\n    'x-rapidapi-host': `${process.env.REACT_APP_HOST}`,\r\n    'x-rapidapi-key': `${process.env.REACT_APP_API_KEY}`,\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\nexport default API;\r\n","import API from '../api/api';\r\n\r\nexport async function getTrendingFeed(currentPage :number) {\r\n  const response = await API.get(\r\n    `/trending/feed/?limit=30&page=${currentPage}`,\r\n  );\r\n  return response.data;\r\n}\r\n\r\nexport async function getUserInfo(uniqueId :string) {\r\n  const response = await API.get(`/user/info/${uniqueId}`);\r\n  return response.data;\r\n}\r\n\r\nexport async function getUserFeed(uniqueId :string): Promise<any> {\r\n  const response = await API.get(`/user/feed/${uniqueId}`);\r\n  return response.data;\r\n}\r\n","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nmodule.exports = 0;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"NewsView_wrap__3Z4fm\"};"],"sourceRoot":""}