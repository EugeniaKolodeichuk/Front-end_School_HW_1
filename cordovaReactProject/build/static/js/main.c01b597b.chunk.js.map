{"version":3,"sources":["components/Loader/StyledLoader.tsx","components/Loader/Loader.tsx","components/Theme/StyledTheme.tsx","styled/Global.tsx","App.tsx","index.tsx"],"names":["StyledLoader","styled","div","Loader","type","color","height","width","LightTheme","background","toggleBorder","gradient","theme","dark","light","GlobalStyle","createGlobalStyle","properties","AppBar","lazy","Container","NewsView","ProfileView","ThemeContext","createContext","value","setThemeValue","App","useState","themeValue","Provider","Global","fallback","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gLAMeA,E,KAJMC,EAAOC,IAAV,0E,OCUHC,IARA,WACb,OACE,cAAC,EAAD,CAAc,cAAY,SAA1B,SACE,cAAC,IAAD,CAASC,KAAK,eAAeC,MAAM,UAAUC,OAAQ,IAAKC,MAAO,U,gCCPvE,oEAAO,IAAMC,EAAa,CACxBH,MAAO,OACPI,WAAY,OACZC,aAAc,WACdC,SAAU,QAUCC,EAAQ,CACnBC,KARuB,CACvBR,MAAO,OACPI,WAAY,OACZC,aAAc,OACdC,SAAU,WAKVG,MAAON,I,uJCuBMO,EArCKC,YAAH,spBAQD,SAAAC,GAAU,OAAIA,EAAWL,MAAMH,cACrC,SAAAQ,GAAU,OAAIA,EAAWL,MAAMP,S,eCFnCa,EAASC,gBACb,kBAAM,iCAEFC,EAAYD,gBAChB,kBACE,iCAIEE,EAAWF,gBACf,kBAAM,uDAEFG,EAAcH,gBAClB,kBACE,uDAKSI,EAAeC,wBAA4B,CACtDC,MAAO,QACPC,cAAe,OAGF,SAASC,IACtB,MAAoCC,mBAAsB,SAA1D,mBAAOC,EAAP,KAAmBH,EAAnB,KACA,OACE,mCACE,cAACH,EAAaO,SAAd,CAAuBL,MAAO,CAAEA,MAAOI,EAAYH,iBAAnD,SACE,eAAC,IAAD,CAAed,MAAOA,IAAMiB,GAA5B,UACE,cAACE,EAAD,IACA,cAAC,WAAD,CAAUC,SAAU,cAAC7B,EAAA,EAAD,IAApB,SACE,eAACiB,EAAD,WACE,cAACF,EAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOe,KAAK,qBAAZ,SACE,cAACX,EAAD,MAGF,cAAC,IAAD,CAAOW,KAAK,IAAZ,SACE,cAACZ,EAAD,uB,gCClDlB,mEAMAa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.c01b597b.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst StyledLoader = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\nexport default StyledLoader;\r\n","import Spinner from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport StyledLoader from './StyledLoader';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <StyledLoader data-testid=\"loader\">\r\n      <Spinner type=\"BallTriangle\" color=\"#005eaa\" height={100} width={100} />\r\n    </StyledLoader>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","export const LightTheme = {\r\n  color: '#000',\r\n  background: '#fff',\r\n  toggleBorder: '#005eaa;',\r\n  gradient: '#fff',\r\n};\r\n\r\nexport const DarkTheme = {\r\n  color: '#fff',\r\n  background: '#000',\r\n  toggleBorder: '#fff',\r\n  gradient: '#bdbdbd',\r\n};\r\n\r\nexport const theme = {\r\n  dark: DarkTheme,\r\n  light: LightTheme,\r\n};\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    body {\r\n  margin: 0;\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n    sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  background: ${properties => properties.theme.background};\r\n color: ${properties => properties.theme.color};\r\n  font-size: 18px;\r\n},\r\n\r\ncode {\r\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\r\n    monospace;\r\n},\r\n\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n},\r\n\r\nimg {\r\n  display: flex;\r\n  max-width: 100%;\r\n  height: auto;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\nli {\r\n  list-style: none;\r\n}\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","/* eslint-disable object-curly-newline */\r\nimport { lazy, Suspense, createContext, useState } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport Loader from './components/Loader/Loader';\r\nimport GlobalStyle from './styled/Global';\r\nimport { theme } from './components/Theme/StyledTheme';\r\nimport { Theme, ContextTheme } from './types/types';\r\n\r\nconst AppBar = lazy(\r\n  () => import('./components/AppBar/AppBar' /*webpackChunkName: \"app-bar\"*/),\r\n);\r\nconst Container = lazy(\r\n  () =>\r\n    import(\r\n      './components/Container/Container' /*webpackChunkName: \"container\"*/\r\n    ),\r\n);\r\nconst NewsView = lazy(\r\n  () => import('./pages/NewsView/NewsView' /*webpackChunkName: \"news-view\"*/),\r\n);\r\nconst ProfileView = lazy(\r\n  () =>\r\n    import(\r\n      './pages/ProfileView/ProfileView' /*webpackChunkName: \"profile-view\"*/\r\n    ),\r\n);\r\n\r\nexport const ThemeContext = createContext<ContextTheme>({\r\n  value: 'light',\r\n  setThemeValue: null,\r\n});\r\n\r\nexport default function App() {\r\n  const [themeValue, setThemeValue] = useState<keyof Theme>('light'); // \"light\" | \"dark\"\r\n  return (\r\n    <>\r\n      <ThemeContext.Provider value={{ value: themeValue, setThemeValue }}>\r\n        <ThemeProvider theme={theme[themeValue]}>\r\n          <GlobalStyle />\r\n          <Suspense fallback={<Loader />}>\r\n            <Container>\r\n              <AppBar />\r\n\r\n              <Switch>\r\n                <Route path=\"/profile/:uniqueId\">\r\n                  <ProfileView />\r\n                </Route>\r\n\r\n                <Route path=\"/\">\r\n                  <NewsView />\r\n                </Route>\r\n              </Switch>\r\n            </Container>\r\n          </Suspense>\r\n        </ThemeProvider>\r\n      </ThemeContext.Provider>\r\n    </>\r\n  );\r\n}\r\n","// eslint-disable-next-line no-use-before-define\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}