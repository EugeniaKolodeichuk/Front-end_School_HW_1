{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kolod\\\\Desktop\\\\Jane\\\\GoIT\\\\GitHub\\\\Front-end_School_HW_1\\\\cordovaReactProject\\\\src\\\\pages\\\\ProfileView\\\\ProfileView.tsx\",\n    _s = $RefreshSig$();\n\nimport { useParams } from 'react-router';\nimport { useState, useEffect } from 'react';\nimport StyledWrap from './StyledProfileView';\nimport Loader from '../../components/Loader/Loader';\nimport { getUserFeed, getUserInfo } from '../../service/app';\nimport UserVideos from '../../components/UserVideos/UserVideos';\nimport UserInfo from '../../components/UserInfo/UserInfo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProfileView() {\n  _s();\n\n  const {\n    uniqueId\n  } = useParams();\n  const [userFeed, setUserFeed] = useState([]);\n  const [userInfo, setUserInfo] = useState(null);\n  useEffect(() => {\n    try {\n      getUserInfo(uniqueId).then(data => {\n        setUserInfo(data);\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }, [setUserInfo]);\n  useEffect(() => {\n    try {\n      getUserFeed(uniqueId).then(data => {\n        setUserFeed(data);\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }, [setUserFeed]);\n\n  if (!userInfo) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"profile\",\n    children: [/*#__PURE__*/_jsxDEV(UserInfo, {\n      uniqueId: userInfo.uniqueId,\n      nickname: userInfo.nickname,\n      avatarMedium: userInfo.avatarMedium,\n      signature: userInfo.signature\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledWrap, {\n      children: userFeed ? userFeed.map(user => /*#__PURE__*/_jsxDEV(UserVideos, {\n        user: user\n      }, user.createTime, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, userInfo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, userInfo.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProfileView, \"W9S2Ll52Bt8MEZOkI7tITmA+5lg=\", false, function () {\n  return [useParams];\n});\n\n_c = ProfileView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileView\");","map":{"version":3,"sources":["C:/Users/kolod/Desktop/Jane/GoIT/GitHub/Front-end_School_HW_1/cordovaReactProject/src/pages/ProfileView/ProfileView.tsx"],"names":["useParams","useState","useEffect","StyledWrap","Loader","getUserFeed","getUserInfo","UserVideos","UserInfo","ProfileView","uniqueId","userFeed","setUserFeed","userInfo","setUserInfo","then","data","error","console","nickname","avatarMedium","signature","map","user","createTime","id"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,cAA1B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,mBAAzC;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,QAAP,MAAqB,oCAArB;;AAGA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AACpC,QAAM;AAAEC,IAAAA;AAAF,MAAeV,SAAS,EAA9B;AAEA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAc,EAAd,CAAxC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAmB,IAAnB,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI;AACFI,MAAAA,WAAW,CAACI,QAAD,CAAX,CAAsBK,IAAtB,CAA2BC,IAAI,IAAI;AACjCF,QAAAA,WAAW,CAACE,IAAD,CAAX;AACD,OAFD;AAGD,KAJD,CAIE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF,GARQ,EAQN,CAACH,WAAD,CARM,CAAT;AAUAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI;AACFG,MAAAA,WAAW,CAACK,QAAD,CAAX,CAAsBK,IAAtB,CAA2BC,IAAI,IAAI;AACjCJ,QAAAA,WAAW,CAACI,IAAD,CAAX;AACD,OAFD;AAGD,KAJD,CAIE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF,GARQ,EAQN,CAACL,WAAD,CARM,CAAT;;AASA,MAAI,CAACC,QAAL,EAAe;AACb,wBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE;AAAuB,mBAAY,SAAnC;AAAA,4BACE,QAAC,QAAD;AACE,MAAA,QAAQ,EAAEA,QAAQ,CAACH,QADrB;AAEE,MAAA,QAAQ,EAAEG,QAAQ,CAACM,QAFrB;AAGE,MAAA,YAAY,EAAEN,QAAQ,CAACO,YAHzB;AAIE,MAAA,SAAS,EAAEP,QAAQ,CAACQ;AAJtB;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,UAAD;AAAA,gBACGV,QAAQ,GACPA,QAAQ,CAACW,GAAT,CAAcC,IAAD,iBACX,QAAC,UAAD;AAAkC,QAAA,IAAI,EAAEA;AAAxC,SAAiBA,IAAI,CAACC,UAAtB;AAAA;AAAA;AAAA;AAAA,cADF,CADO,gBAKP,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AANJ,OAAiBX,QAAQ,CAACY,EAA1B;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,KAAUZ,QAAQ,CAACY,EAAnB;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GA/CuBhB,W;UACDT,S;;;KADCS,W","sourcesContent":["import { useParams } from 'react-router';\r\nimport { useState, useEffect } from 'react';\r\nimport StyledWrap from './StyledProfileView';\r\nimport Loader from '../../components/Loader/Loader';\r\nimport { getUserFeed, getUserInfo } from '../../service/app';\r\nimport UserVideos from '../../components/UserVideos/UserVideos';\r\nimport UserInfo from '../../components/UserInfo/UserInfo';\r\nimport { IUserInfo } from '../../types/userTypes';\r\n\r\nexport default function ProfileView() {\r\n  const { uniqueId } = useParams<{ uniqueId: string }>();\r\n\r\n  const [userFeed, setUserFeed] = useState<IUserInfo[]>([]);\r\n  const [userInfo, setUserInfo] = useState<IUserInfo | null>(null);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      getUserInfo(uniqueId).then(data => {\r\n        setUserInfo(data);\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }, [setUserInfo]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      getUserFeed(uniqueId).then(data => {\r\n        setUserFeed(data);\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }, [setUserFeed]);\r\n  if (!userInfo) {\r\n    return <Loader />;\r\n  }\r\n  return (\r\n    <div key={userInfo.id} data-testid=\"profile\">\r\n      <UserInfo\r\n        uniqueId={userInfo.uniqueId}\r\n        nickname={userInfo.nickname}\r\n        avatarMedium={userInfo.avatarMedium}\r\n        signature={userInfo.signature}\r\n      />\r\n      <StyledWrap key={userInfo.id}>\r\n        {userFeed ? (\r\n          userFeed.map((user: IUserInfo) => (\r\n            <UserVideos key={user.createTime} user={user} />\r\n          ))\r\n        ) : (\r\n          <Loader />\r\n        )}\r\n      </StyledWrap>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}