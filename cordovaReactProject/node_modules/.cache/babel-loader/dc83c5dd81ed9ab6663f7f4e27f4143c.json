{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kolod\\\\Desktop\\\\Jane\\\\GoIT\\\\GitHub\\\\Front-end_School_HW_1\\\\cordovaReactProject\\\\src\\\\components\\\\Video\\\\Video.tsx\";\nimport Loader from '../Loader/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Video = _ref => {\n  let {\n    downloadAddr\n  } = _ref;\n  return downloadAddr ? /*#__PURE__*/_jsxDEV(\"video\", {\n    width: \"300px\",\n    controls: true,\n    \"data-testid\": \"video\",\n    children: [/*#__PURE__*/_jsxDEV(\"source\", {\n      src: downloadAddr,\n      type: \"video/mp4;\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"track\", {\n      kind: \"captions\",\n      srcLang: \"en\",\n      label: \"english_captions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Video;\nexport default Video;\n\nvar _c;\n\n$RefreshReg$(_c, \"Video\");","map":{"version":3,"sources":["C:/Users/kolod/Desktop/Jane/GoIT/GitHub/Front-end_School_HW_1/cordovaReactProject/src/components/Video/Video.tsx"],"names":["Loader","Video","downloadAddr"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,kBAAnB;;;AAGA,MAAMC,KAAK,GAAG,QAAuC;AAAA,MAAtC;AAAEC,IAAAA;AAAF,GAAsC;AACnD,SAAOA,YAAY,gBACjB;AAAO,IAAA,KAAK,EAAC,OAAb;AAAqB,IAAA,QAAQ,MAA7B;AAA8B,mBAAY,OAA1C;AAAA,4BACE;AAAQ,MAAA,GAAG,EAAEA,YAAb;AAA2B,MAAA,IAAI,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,OAAO,EAAC,IAA/B;AAAoC,MAAA,KAAK,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADiB,gBAMjB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,UANF;AAQD,CATD;;KAAMD,K;AAWN,eAAeA,KAAf","sourcesContent":["import Loader from '../Loader/Loader';\r\nimport { VideoProperties } from '../../types/feedTypes';\r\n\r\nconst Video = ({ downloadAddr }: VideoProperties) => {\r\n  return downloadAddr ? (\r\n    <video width=\"300px\" controls data-testid=\"video\">\r\n      <source src={downloadAddr} type=\"video/mp4;\" />\r\n      <track kind=\"captions\" srcLang=\"en\" label=\"english_captions\" />\r\n    </video>\r\n  ) : (\r\n    <Loader />\r\n  );\r\n};\r\n\r\nexport default Video;\r\n"]},"metadata":{},"sourceType":"module"}