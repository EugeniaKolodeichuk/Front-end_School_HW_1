{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kolod\\\\Desktop\\\\Jane\\\\GoIT\\\\GitHub\\\\Front-end_School_HW_1\\\\cordovaReactProject\\\\src\\\\components\\\\Theme\\\\ThemeToggle.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { ThemeContext } from '../../App';\nimport { StyledSunIcon, StyledButton, ToggleContainer, StyledMoonIcon } from './StyledToggle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ThemeToggle() {\n  _s();\n\n  const {\n    value,\n    setThemeValue\n  } = useContext(ThemeContext);\n\n  const toggleTheme = () => {\n    if (setThemeValue) {\n      if (value === 'light') {\n        setThemeValue('dark');\n      } else {\n        setThemeValue('light');\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledButton, {\n    onClick: toggleTheme,\n    children: /*#__PURE__*/_jsxDEV(ToggleContainer, {\n      children: [/*#__PURE__*/_jsxDEV(StyledSunIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledMoonIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ThemeToggle, \"gaEm5Jd+aoCwf3WYdhP/cB6aPH8=\");\n\n_c = ThemeToggle;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeToggle\");","map":{"version":3,"sources":["C:/Users/kolod/Desktop/Jane/GoIT/GitHub/Front-end_School_HW_1/cordovaReactProject/src/components/Theme/ThemeToggle.tsx"],"names":["useContext","ThemeContext","StyledSunIcon","StyledButton","ToggleContainer","StyledMoonIcon","ThemeToggle","value","setThemeValue","toggleTheme"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SACEC,aADF,EAEEC,YAFF,EAGEC,eAHF,EAIEC,cAJF,QAKO,gBALP;;AAOA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AACpC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAA2BR,UAAU,CAACC,YAAD,CAA3C;;AAEA,QAAMQ,WAAW,GAAG,MAAM;AACxB,QAAID,aAAJ,EAAmB;AACjB,UAAID,KAAK,KAAK,OAAd,EAAuB;AACrBC,QAAAA,aAAa,CAAC,MAAD,CAAb;AACD,OAFD,MAEO;AACLA,QAAAA,aAAa,CAAC,OAAD,CAAb;AACD;AACF;AACF,GARD;;AAUA,sBACE,QAAC,YAAD;AAAc,IAAA,OAAO,EAAEC,WAAvB;AAAA,2BACE,QAAC,eAAD;AAAA,8BACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GArBuBH,W;;KAAAA,W","sourcesContent":["import { useContext } from 'react';\r\nimport { ThemeContext } from '../../App';\r\nimport {\r\n  StyledSunIcon,\r\n  StyledButton,\r\n  ToggleContainer,\r\n  StyledMoonIcon,\r\n} from './StyledToggle';\r\n\r\nexport default function ThemeToggle() {\r\n  const { value, setThemeValue } = useContext(ThemeContext);\r\n\r\n  const toggleTheme = () => {\r\n    if (setThemeValue) {\r\n      if (value === 'light') {\r\n        setThemeValue('dark');\r\n      } else {\r\n        setThemeValue('light');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledButton onClick={toggleTheme}>\r\n      <ToggleContainer>\r\n        <StyledSunIcon />\r\n        <StyledMoonIcon />\r\n      </ToggleContainer>\r\n    </StyledButton>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}